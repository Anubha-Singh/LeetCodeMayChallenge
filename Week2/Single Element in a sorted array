You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.

 

Example 1:

Input: [1,1,2,3,3,4,4,8,8]
Output: 2
Example 2:

Input: [3,3,7,7,10,11,11]
Output: 10
 

Note: Your solution should run in O(log n) time and O(1) space.

C++	
1
class Solution {
2
public:
3
    int singleNonDuplicate(vector<int>& nums) {
4
        unordered_map<int,int>mp;
5
        for(int i=0;i<nums.size();i++)
6
            mp[nums[i]]++;
7
        for(int i=0;i<nums.size();i++)
8
        {
9
            if(mp[nums[i]]<2)
10
                return nums[i];
11
        }
12
        return -1;
13
    }
14
};
